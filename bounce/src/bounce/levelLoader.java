package bounce;
import java.util.ArrayList;
import jig.Entity;

public class levelLoader {

    static int levelSize = 15;//How many tiles are these
    static int tileSize = 40;//How wide are the tiles
    static int infoSize = 200;//How large is our side information panel? (Remove this much room from the X axis)

    //Points you get for collecting treasure
    static int treasurePoints = 100;

    //Points you get for collecting treasure
    static int weaponPoints = 10;
    //Initialize levelData

    static ArrayList<int[][]> levelData = new ArrayList<int[][]>();

    public static int loadLevels(){
        //Iterate through file and load in levels
        //For the moment we'll load a debug level
        //Read through the file
        //Level data:
        //type, subType, position x, position y
        //types:
            //0 = tile
                //0 - wall
                //1 - treasure
                //2 - Weapon
                //3 - Exit
            //1 = enemy
                //subtype: enemy type
            //2 = Player
                //subtype: N/A
        //Positions are listed based on x and y locations of tiles, not actual x and y positions
        int[][] template = {
                {0, 0, 0, 0 }, {0, 0, 1, 0 }, {0, 0, 2, 0 }, {0, 0, 3, 0 }, {0, 0, 4, 0 }, {0, 0, 5, 0 }, {0, 0, 6, 0 }, {0, 0, 7, 0 }, {0, 0, 8, 0 }, {0, 0, 9, 0 }, {0, 0, 10, 0 }, {0, 0, 11, 0 }, {0, 0, 12, 0 }, {0, 0, 13, 0 }, {0, 0, 14, 0 },
                {0, 0, 0, 1 }, {0, 0, 1, 1 }, {0, 0, 2, 1 }, {0, 0, 3, 1 }, {0, 0, 4, 1 }, {0, 0, 5, 1 }, {0, 0, 6, 1 }, {0, 0, 7, 1 }, {0, 0, 8, 1 }, {0, 0, 9, 1 }, {0, 0, 10, 1 }, {0, 0, 11, 1 }, {0, 0, 12, 1 }, {0, 0, 13, 1 }, {0, 0, 14, 1 },
                {0, 0, 0, 2 }, {0, 0, 1, 2 }, {0, 0, 2, 2 }, {0, 0, 3, 2 }, {0, 0, 4, 2 }, {0, 0, 5, 2 }, {0, 0, 6, 2 }, {0, 0, 7, 2 }, {0, 0, 8, 2 }, {0, 0, 9, 2 }, {0, 0, 10, 2 }, {0, 0, 11, 2 }, {0, 0, 12, 2 }, {0, 0, 13, 2 }, {0, 0, 14, 2 },
                {0, 0, 0, 3 }, {0, 0, 1, 3 }, {0, 0, 2, 3 }, {0, 0, 3, 3 }, {0, 0, 4, 3 }, {0, 0, 5, 3 }, {0, 0, 6, 3 }, {0, 0, 7, 3 }, {0, 0, 8, 3 }, {0, 0, 9, 3 }, {0, 0, 10, 3 }, {0, 0, 11, 3 }, {0, 0, 12, 3 }, {0, 0, 13, 3 }, {0, 0, 14, 3 },
                {0, 0, 0, 4 }, {0, 0, 1, 4 }, {0, 0, 2, 4 }, {0, 0, 3, 4 }, {0, 0, 4, 4 }, {0, 0, 5, 4 }, {0, 0, 6, 4 }, {0, 0, 7, 4 }, {0, 0, 8, 4 }, {0, 0, 9, 4 }, {0, 0, 10, 4 }, {0, 0, 11, 4 }, {0, 0, 12, 4 }, {0, 0, 13, 4 }, {0, 0, 14, 4 },
                {0, 0, 0, 5 }, {0, 0, 1, 5 }, {0, 0, 2, 5 }, {0, 0, 3, 5 }, {0, 0, 4, 5 }, {0, 0, 5, 5 }, {0, 0, 6, 5 }, {0, 0, 7, 5 }, {0, 0, 8, 5 }, {0, 0, 9, 5 }, {0, 0, 10, 5 }, {0, 0, 11, 5 }, {0, 0, 12, 5 }, {0, 0, 13, 5 }, {0, 0, 14, 5 },
                {0, 0, 0, 6 }, {0, 0, 1, 6 }, {0, 0, 2, 6 }, {0, 0, 3, 6 }, {0, 0, 4, 6 }, {0, 0, 5, 6 }, {0, 0, 6, 6 }, {0, 0, 7, 6 }, {0, 0, 8, 6 }, {0, 0, 9, 6 }, {0, 0, 10, 6 }, {0, 0, 11, 6 }, {0, 0, 12, 6 }, {0, 0, 13, 6 }, {0, 0, 14, 6 },
                {0, 0, 0, 7 }, {0, 0, 1, 7 }, {0, 0, 2, 7 }, {0, 0, 3, 7 }, {0, 0, 4, 7 }, {0, 0, 5, 7 }, {0, 0, 6, 7 }, {0, 0, 7, 7 }, {0, 0, 8, 7 }, {0, 0, 9, 7 }, {0, 0, 10, 7 }, {0, 0, 11, 7 }, {0, 0, 12, 7 }, {0, 0, 13, 7 }, {0, 0, 14, 7 },
                {0, 0, 0, 8 }, {0, 0, 1, 8 }, {0, 0, 2, 8 }, {0, 0, 3, 8 }, {0, 0, 4, 8 }, {0, 0, 5, 8 }, {0, 0, 6, 8 }, {0, 0, 7, 8 }, {0, 0, 8, 8 }, {0, 0, 9, 8 }, {0, 0, 10, 8 }, {0, 0, 11, 8 }, {0, 0, 12, 8 }, {0, 0, 13, 8 }, {0, 0, 14, 8 },
                {0, 0, 0, 9 }, {0, 0, 1, 9 }, {0, 0, 2, 9 }, {0, 0, 3, 9 }, {0, 0, 4, 9 }, {0, 0, 5, 9 }, {0, 0, 6, 9 }, {0, 0, 7, 9 }, {0, 0, 8, 9 }, {0, 0, 9, 9 }, {0, 0, 10, 9 }, {0, 0, 11, 9 }, {0, 0, 12, 9 }, {0, 0, 13, 9 }, {0, 0, 14, 9 },
                {0, 0, 0, 10}, {0, 0, 1, 10}, {0, 0, 2, 10}, {0, 0, 3, 10}, {0, 0, 4, 10}, {0, 0, 5, 10}, {0, 0, 6, 10}, {0, 0, 7, 10}, {0, 0, 8, 10}, {0, 0, 9, 10}, {0, 0, 10, 10}, {0, 0, 11, 10}, {0, 0, 12, 10}, {0, 0, 13, 10}, {0, 0, 14, 10},
                {0, 0, 0, 11}, {0, 0, 1, 11}, {0, 0, 2, 11}, {0, 0, 3, 11}, {0, 0, 4, 11}, {0, 0, 5, 11}, {0, 0, 6, 11}, {0, 0, 7, 11}, {0, 0, 8, 11}, {0, 0, 9, 11}, {0, 0, 10, 11}, {0, 0, 11, 11}, {0, 0, 12, 11}, {0, 0, 13, 11}, {0, 0, 14, 11},
                {0, 0, 0, 12}, {0, 0, 1, 12}, {0, 0, 2, 12}, {0, 0, 3, 12}, {0, 0, 4, 12}, {0, 0, 5, 12}, {0, 0, 6, 12}, {0, 0, 7, 12}, {0, 0, 8, 12}, {0, 0, 9, 12}, {0, 0, 10, 12}, {0, 0, 11, 12}, {0, 0, 12, 12}, {0, 0, 13, 12}, {0, 0, 14, 12},
                {0, 0, 0, 13}, {0, 0, 1, 13}, {0, 0, 2, 13}, {0, 0, 3, 13}, {0, 0, 4, 13}, {0, 0, 5, 13}, {0, 0, 6, 13}, {0, 0, 7, 13}, {0, 0, 8, 13}, {0, 0, 9, 13}, {0, 0, 10, 13}, {0, 0, 11, 13}, {0, 0, 12, 13}, {0, 0, 13, 13}, {0, 0, 14, 13},
                {0, 0, 0, 14}, {0, 0, 1, 14}, {0, 0, 2, 14}, {0, 0, 3, 14}, {0, 0, 4, 14}, {0, 0, 5, 14}, {0, 0, 6, 14}, {0, 0, 7, 14}, {0, 0, 8, 14}, {0, 0, 9, 14}, {0, 0, 10, 14}, {0, 0, 11, 14}, {0, 0, 12, 14}, {0, 0, 13, 14}, {0, 0, 14, 14}
        };

        int[][] testLevel = {
                {0, 0, 0, 0 }, {0, 0, 1, 0 }, {0, 0, 2, 0 }, {0, 1, 3, 0 }, {0, 0, 4, 0 }, {0, 0, 5, 0 }, {0, 0, 6, 0 }, {0, 0, 7, 0 }, {0, 0, 8, 0 }, {0, 0, 9, 0 }, {0, 0, 10, 0 }, {0, 0, 11, 0 }, {0, 0, 12, 0 }, {0, 0, 13, 0 }, {0, 0, 14, 0 },
                {0, 0, 0, 1 }, {0, 0, 1, 1 }, {0, 0, 2, 1 }, {1, 0, 3, 1 }, {0, 0, 4, 1 }, {0, 0, 5, 1 }, {0, 0, 6, 1 }, {0, 0, 7, 1 }, {0, 0, 8, 1 }, {0, 0, 9, 1 }, {1, 0, 10, 1 }, {0, 0, 11, 1 }, {0, 0, 12, 1 }, {0, 0, 13, 1 }, {0, 0, 14, 1 },
                {0, 0, 0, 2 }, {0, 0, 1, 2 }, {0, 0, 2, 2 },                {0, 0, 4, 2 }, {0, 0, 5, 2 }, {0, 0, 6, 2 },                                                                                              {0, 0, 13, 2 }, {0, 0, 14, 2 },
                {0, 0, 0, 3 }, {0, 0, 1, 3 }, {0, 0, 2, 3 },                                                                            {0, 0, 8, 3 }, {0, 0, 9, 3 }, {0, 0, 10, 3 }, {0, 0, 11, 3 },                 {0, 0, 13, 3 }, {0, 0, 14, 3 },
                {0, 0, 0, 4 }, {0, 0, 1, 4 }, {0, 0, 2, 4 },                {0, 0, 4, 4 }, {0, 0, 5, 4 }, {0, 0, 6, 4 },                {0, 0, 8, 4 }, {0, 0, 9, 4 }, {0, 0, 10, 4 }, {0, 0, 11, 4 },                 {0, 0, 13, 4 }, {0, 0, 14, 4 },
                {0, 0, 0, 5 }, {0, 0, 1, 5 }, {0, 0, 2, 5 },                {0, 0, 4, 5 }, {1, 0, 5, 5 }, {0, 0, 6, 5 },                                                                                              {0, 0, 13, 5 }, {0, 0, 14, 5 },
                {0, 0, 0, 6 }, {0, 0, 1, 6 }, {0, 0, 2, 6 },                {0, 0, 4, 6 },                {0, 0, 6, 6 }, {0, 0, 7, 6 }, {0, 0, 8, 6 }, {0, 0, 9, 6 }, {0, 0, 10, 6 }, {0, 0, 11, 6 },                 {0, 0, 13, 6 }, {0, 0, 14, 6 },
                {0, 0, 0, 7 }, {0, 2, 1, 7 },                                                                                           {0, 1, 8, 7 },                {0, 0, 10, 7 }, {0, 0, 11, 7 },
                {0, 0, 0, 8 }, {0, 0, 1, 8 }, {0, 0, 2, 8 }, {0, 0, 3, 8 }, {0, 0, 4, 8 }, {0, 0, 5, 8 }, {0, 0, 6, 8 },                {0, 0, 8, 8 },                {0, 0, 10, 8 }, {0, 0, 11, 8 }, {0, 0, 12, 8 }, {0, 0, 13, 8 },
                {0, 0, 0, 9 }, {0, 0, 1, 9 }, {0, 0, 2, 9 }, {0, 0, 3, 9 }, {0, 0, 4, 9 }, {0, 0, 5, 9 }, {0, 0, 6, 9 },                               {0, 2, 9, 9 }, {0, 0, 10, 9 }, {0, 0, 11, 9 }, {1, 0, 12, 9 },
                {0, 0, 0, 10}, {0, 0, 1, 10}, {0, 0, 2, 10}, {0, 0, 3, 10}, {0, 1, 4, 10}, {0, 0, 5, 10}, {0, 0, 6, 10},                {0, 0, 8, 10}, {0, 0, 9, 10}, {0, 0, 10, 10}, {0, 0, 11, 10}, {0, 0, 12, 10}, {0, 0, 13, 10},
                {0, 0, 0, 11}, {0, 0, 1, 11}, {0, 0, 2, 11}, {0, 0, 3, 11},                {1, 1, 5, 11}, {0, 0, 6, 11},                {0, 0, 8, 11}, {0, 0, 9, 11}, {0, 0, 10, 11}, {0, 2, 11, 11},
                {0, 0, 0, 12}, {0, 0, 1, 12}, {0, 0, 2, 12}, {0, 0, 3, 12},                {0, 0, 5, 12}, {0, 0, 6, 12},                               {1, 0, 9, 12}, {0, 0, 10, 12},                 {0, 0, 12, 12},                 {0, 0, 14, 12},
                {0, 0, 0, 13}, {0, 0, 1, 13}, {0, 0, 2, 13}, {0, 0, 3, 13},                {0, 0, 5, 13}, {0, 0, 6, 13},                {0, 0, 8, 13}, {0, 0, 9, 13}, {0, 0, 10, 13}, {0, 3, 11, 13},                 {0, 1, 13, 13}, {0, 0, 14, 13},
                {0, 0, 0, 14}, {0, 0, 1, 14}, {0, 0, 2, 14}, {0, 0, 3, 14},                                              {2, 0, 7, 14}, {0, 0, 8, 14}, {0, 0, 9, 14}, {0, 0, 10, 14}, {0, 0, 11, 14}, {0, 0, 12, 14}, {0, 0, 13, 14}, {0, 0, 14, 14}
        };

        levelData.add(testLevel);

        return 0;
    }

    //getLevel takes a level number and returns a 3D array where the first array is the x, the second array is the y, and the third array holds 3 Entites
    public static Tile[][][] getLevel(int levelNum) {
        Tile[][][] level = new Tile[levelSize][levelSize][3];
        //levelData[x][y] = Array length 3
        //0: Tile
        //1: Item
        //2: Entity
        //for (int i = 0; i < level.length; i++) {
        //    for (int j = 0; j < level[i].length; j++) {
        //        level[i][j] = new Object[3];
        //    }
        //}

        //Read through the levelData for the appropriate level, create the correct entities for the level data and send the 3D array full of entities
        for (int[] tileData : levelData.get(0)){
            int x = tileData[2];
            int y = tileData[3];
            int type = tileData[1];
            int shift = tileSize;

            level[x][y][tileData[0]]= new Tile((x*shift)+(shift/2+infoSize), (y*shift)+shift/2, type, tileData[0], x, y);

        }

        return level;
    }


    //Levels need to be a 3D array, with the first two arrays for x and y, and the third keeping track of multiple entitites on one tile
    //Tile 0 is initialized for items and is ignored when checking for collisions


}
